{
  "swagger": "2.0",
  "info": {
    "title": "SCD_16_09",
    "description": "\n\n### A RESTful API built for SCD_16_09\n\n#### Author\nPedro Diogo - pedrodiogoum@gmail.com\n\n#### Repository\nhttps://github.com/PedroMD/scd-16-09\n",
    "version": "1.0.0"
  },
  "host": "scd-16-09.herokuapp.com",
  "schemes": [
    "http, https"
  ],
  "produces": [
    "application/json"
  ],
  "definitions": {
    "Events": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "description": "Unique ID generated by DB"
        },
        "value": {
          "type": "integer",
          "description": "Event value of a Parameter"
        },
        "paramId": {
          "type": "string",
          "description": "Reference to a single Parameter id"
        },
        "timestamp": {
          "type": "string",
          "format": "date",
          "description": "In date format (UTC Timezone). Automatically added whenever an Event is created."
        }
      }
    },
    "Rules": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "description": "Unique ID generated by DB"
        },
        "paramId": {
          "type": "string",
          "description": "Reference to a single Parameter id"
        },
        "userId": {
          "type": "string",
          "description": "Reference to a single User id"
        },
        "threshold": {
          "type": "integer",
          "description": "The defined threshold value for this rule. Any Event's value higher than this will result in a new Alert."
        },
        "createdAt": {
          "type": "string",
          "format": "date",
          "description": "In date format (UTC Timezone). Automatically added whenever a Rule is created."
        }
      }
    },
    "Alerts": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "description": "Unique ID generated by DB"
        },
        "ruleId": {
          "type": "string",
          "description": "Reference to a single Rule id"
        },
        "paramId": {
          "type": "string",
          "description": "Reference to a single Parameter id"
        },
        "userId": {
          "type": "string",
          "description": "Reference to a single User id"
        },
        "eventId": {
          "type": "string",
          "description": "Reference to a single Event id"
        },
        "timestamp": {
          "type": "string",
          "format": "date",
          "description": "In date format (UTC Timezone). Automatically added whenever an Alert is created."
        }
      }
    },
    "Parameters": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "description": "Unique ID generated by DB"
        },
        "name": {
          "type": "string",
          "description": "The unique name of the Parameter"
        },
        "units": {
          "type": "string",
          "description": "Parameter's units of measure"
        },
        "createdAt": {
          "type": "string",
          "format": "date",
          "description": "In date format (UTC Timezone). Automatically added whenever a Parameter is created."
        }
      }
    },
    "Users": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "description": "Unique ID generated by DB"
        },
        "email": {
          "type": "string",
          "description": "The unique email of a User"
        },
        "rulesIds": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "A list of Rules ids"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date",
          "description": "In date format (UTC Timezone). Automatically added whenever a User is created."
        },
        "password": {
          "type": "string",
          "description": "This user's password. Currently not in use."
        }
      }
    },
    "ParametersEvents": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The unique name of the Parameter"
        },
        "units": {
          "type": "string",
          "description": "Parameter's units of measure"
        },
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "value": {
                "type": "integer"
              },
              "timestamp": {
                "type": "string",
                "format": "date"
              }
            }
          }
        }
      }
    },
    "AlertsParams": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The unique name of the Parameter"
        },
        "units": {
          "type": "string",
          "description": "Parameter's units of measure"
        },
        "threshold": {
          "type": "integer",
          "description": "Threshold value which has triggered these alerts"
        },
        "events": {
          "type": "array",
          "description": "Array containing all events whose value > threshold, for the particular Parameter",
          "items": {
            "type": "object",
            "properties": {
              "value": {
                "type": "integer"
              },
              "timestamp": {
                "type": "string",
                "format": "date"
              }
            }
          }
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "HTTP error code (https://docs.feathersjs.com/middleware/error-handling.html)"
        },
        "message": {
          "type": "string",
          "description": "The error message in a string format (https://docs.feathersjs.com/middleware/error-handling.html)"
        },
        "className": {
          "type": "string",
          "description": "A CSS class name that can be handy for styling errors based on the error type. (https://docs.feathersjs.com/middleware/error-handling.html)"
        },
        "data": {
          "type": "object",
          "description": "Object that may contain additional data (https://docs.feathersjs.com/middleware/error-handling.html)"
        },
        "errors": {
          "type": "object",
          "description": "Object that may contain additional info about the error (https://docs.feathersjs.com/middleware/error-handling.html)"
        }
      }
    }
  }
}
